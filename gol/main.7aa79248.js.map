{"version":3,"sources":["main.js","../../AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/bundle-url.js","../../AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/bundle-loader.js","node_modules/parcel-plugin-wasm.rs/wasm-loader.js"],"names":["Universe","wasm","Cell","memory","default","CELL_SIZE","GRID_COLOR","DEAD_COLOR","ALIVE_COLOR","universe","new","width","height","w","h","canvas","document","querySelector","ctx","getContext","drawGrid","beginPath","strokeStyle","i","moveTo","lineTo","j","stroke","getIndex","row","column","drawCells","cellsPtr","cells","Uint8Array","buffer","col","idx","fillStyle","Dead","fillRect","animation","ticks","renderLoop","value","tick","requestAnimationFrame","playBtn","addEventListener","e","textContent","cancelAnimationFrame","indexPointer","target","getAttribute","querySelectorAll","forEach","classList","remove","add","drawElement","map","p","toggle_cell","event","boundingRect","getBoundingClientRect","scaleX","scaleY","canvasLeft","clientX","left","canvasTop","clientY","top","Math","min","floor","bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","require","loadBundlesLazy","bundles","Array","isArray","id","length","Promise","resolve","code","LazyPromise","reject","loadBundles","slice","then","all","loadBundle","bundleLoaders","registerBundleLoader","type","loader","module","load","register","bundle","substring","lastIndexOf","toLowerCase","bundleLoader","resolved","catch","executor","promise","prototype","onSuccess","onError"],"mappings":"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","file":"main.7aa79248.js","sourceRoot":"..","sourcesContent":["\r\nimport * as wasm from \"./gol-lib/Cargo.toml\";\r\nconst {Universe, Cell} = wasm\r\nconst memory = wasm.default.wasm.memory\r\n\r\nconst CELL_SIZE = 6;\r\nconst [GRID_COLOR, DEAD_COLOR, ALIVE_COLOR] = [\"#333\", \"#000\", \"#FFF\"];\r\n\r\nconst universe = Universe.new();\r\nconst [w, h] = [universe.width(), universe.height()];\r\n\r\nlet canvas = document.querySelector('canvas')\r\n    canvas.height = (CELL_SIZE + 1) * h + 1;\r\n    canvas.width  = (CELL_SIZE + 1) * w + 1;\r\n\r\nconst ctx = canvas.getContext('2d');\r\n\r\n\r\nconst drawGrid = () => {\r\n  ctx.beginPath();\r\n  ctx.strokeStyle = GRID_COLOR;\r\n\r\n  // Vertical lines.\r\n  for (let i = 0; i <= w; i++) {\r\n    ctx.moveTo(i * (CELL_SIZE + 1) + 1, 0);\r\n    ctx.lineTo(i * (CELL_SIZE + 1) + 1, (CELL_SIZE + 1) * h + 1);\r\n  }\r\n\r\n  // Horizontal lines.\r\n  for (let j = 0; j <= h; j++) {\r\n    ctx.moveTo(0,                       j * (CELL_SIZE + 1) + 1);\r\n    ctx.lineTo((CELL_SIZE + 1) * w + 1, j * (CELL_SIZE + 1) + 1);\r\n  }\r\n\r\n  ctx.stroke();\r\n};\r\n\r\nconst getIndex = (row, column) => {\r\n  return row * w + column;\r\n};\r\n\r\nconst drawCells = () => {\r\n  const cellsPtr = universe.cells();\r\n  const cells = new Uint8Array(memory.buffer, cellsPtr, w * h);\r\n\r\n  ctx.beginPath();\r\n\r\n  for (let row = 0; row < h; row++) {\r\n    for (let col = 0; col < w; col++) {\r\n\r\n      const idx = getIndex(row, col);\r\n\r\n      ctx.fillStyle = cells[idx] === Cell.Dead\r\n        ? DEAD_COLOR\r\n        : ALIVE_COLOR;\r\n\r\n      ctx.fillRect(\r\n        col * (CELL_SIZE + 1) + 1,\r\n        row * (CELL_SIZE + 1) + 1,\r\n        CELL_SIZE,\r\n        CELL_SIZE\r\n      );\r\n      \r\n    }\r\n  }\r\n\r\n  ctx.stroke();\r\n};\r\n\r\nlet animation = false;\r\n\r\nconst ticks = document.querySelector('#ticks');\r\n\r\nconst renderLoop = () => {\r\n  drawGrid();\r\n  drawCells();\r\n  for(let i = 0; i < ticks.value; i++) universe.tick();\r\n  animation = requestAnimationFrame(renderLoop);\r\n};\r\n\r\nconst playBtn = document.querySelector('#playbtn')\r\n\r\nplayBtn.addEventListener('click', e => {\r\n  playBtn.textContent = animation ? \"▶\" : \"⏸\";\r\n  if ( animation ) {\r\n    cancelAnimationFrame(animation);\r\n    animation = false;\r\n  } else {\r\n    renderLoop();\r\n  }\r\n})\r\n\r\ndrawGrid();\r\ndrawCells();\r\n\r\nlet indexPointer = 0;\r\ndocument.querySelector('#pointers').addEventListener('click', e => {\r\n  indexPointer = (e.target.getAttribute('data-index'));\r\n  document.querySelectorAll('#pointers button').forEach(e => e.classList.remove('selected'))\r\n  e.target.classList.add('selected');\r\n});\r\n\r\nlet drawElement = (row, col) => {\r\n  let coords = [\r\n    // 0: pointer\r\n    [[0,0]],\r\n    // 1: glider\r\n    [[1,0],[2,1],[0,2],[1,2],[2,2] ],\r\n    // 2: cross\r\n    [[0,0],[-1,0],[1,0],[0,-1],[0,1]]\r\n  ][indexPointer].map( p => {\r\n    universe.toggle_cell(row+p[0], col+p[1])\r\n  });\r\n\r\n}\r\n\r\ncanvas.addEventListener(\"click\", event => {\r\n  const boundingRect = canvas.getBoundingClientRect();\r\n\r\n  const scaleX = canvas.width / boundingRect.width;\r\n  const scaleY = canvas.height / boundingRect.height;\r\n\r\n  const canvasLeft = (event.clientX - boundingRect.left) * scaleX;\r\n  const canvasTop = (event.clientY - boundingRect.top) * scaleY;\r\n\r\n  const row = Math.min(Math.floor(canvasTop / (CELL_SIZE + 1)), h- 1);\r\n  const col = Math.min(Math.floor(canvasLeft / (CELL_SIZE + 1)), w- 1);\r\n\r\n  //universe.toggle_cell(row, col);\r\n  drawElement(row, col);\r\n\r\n  drawGrid();\r\n  drawCells();\r\n});","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var getBundleURL = require('./bundle-url').getBundleURL;\n\nfunction loadBundlesLazy(bundles) {\n  if (!Array.isArray(bundles)) {\n    bundles = [bundles]\n  }\n\n  var id = bundles[bundles.length - 1];\n\n  try {\n    return Promise.resolve(require(id));\n  } catch (err) {\n    if (err.code === 'MODULE_NOT_FOUND') {\n      return new LazyPromise(function (resolve, reject) {\n        loadBundles(bundles.slice(0, -1))\n          .then(function () {\n            return require(id);\n          })\n          .then(resolve, reject);\n      });\n    }\n\n    throw err;\n  }\n}\n\nfunction loadBundles(bundles) {\n  return Promise.all(bundles.map(loadBundle));\n}\n\nvar bundleLoaders = {};\nfunction registerBundleLoader(type, loader) {\n  bundleLoaders[type] = loader;\n}\n\nmodule.exports = exports = loadBundlesLazy;\nexports.load = loadBundles;\nexports.register = registerBundleLoader;\n\nvar bundles = {};\nfunction loadBundle(bundle) {\n  var id;\n  if (Array.isArray(bundle)) {\n    id = bundle[1];\n    bundle = bundle[0];\n  }\n\n  if (bundles[bundle]) {\n    return bundles[bundle];\n  }\n\n  var type = (bundle.substring(bundle.lastIndexOf('.') + 1, bundle.length) || bundle).toLowerCase();\n  var bundleLoader = bundleLoaders[type];\n  if (bundleLoader) {\n    return bundles[bundle] = bundleLoader(getBundleURL() + bundle)\n      .then(function (resolved) {\n        if (resolved) {\n          module.bundle.register(id, resolved);\n        }\n\n        return resolved;\n      }).catch(function(e) {\n        delete bundles[bundle];\n        \n        throw e;\n      });\n  }\n}\n\nfunction LazyPromise(executor) {\n  this.executor = executor;\n  this.promise = null;\n}\n\nLazyPromise.prototype.then = function (onSuccess, onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.then(onSuccess, onError)\n};\n\nLazyPromise.prototype.catch = function (onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.catch(onError)\n};\n","var wasm;const __exports = {};\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n/**\n*/\n__exports.Cell = Object.freeze({ Dead:0,\"0\":\"Dead\",Alive:1,\"1\":\"Alive\", });\n/**\n*/\nclass  Universe {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Universe.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_universe_free(ptr);\n    }\n    /**\n    * @param {number} row\n    * @param {number} column\n    */\n    toggle_cell(row, column) {\n        wasm.universe_toggle_cell(this.ptr, row, column);\n    }\n    /**\n    */\n    tick() {\n        wasm.universe_tick(this.ptr);\n    }\n    /**\n    * @returns {Universe}\n    */\n    static new() {\n        var ret = wasm.universe_new();\n        return Universe.__wrap(ret);\n    }\n    /**\n    * @param {number} width\n    */\n    set_width(width) {\n        wasm.universe_set_width(this.ptr, width);\n    }\n    /**\n    * @param {number} height\n    */\n    set_height(height) {\n        wasm.universe_set_height(this.ptr, height);\n    }\n    /**\n    * @returns {string}\n    */\n    render() {\n        try {\n            const retptr = wasm.__wbindgen_export_0.value - 16;\n            wasm.__wbindgen_export_0.value = retptr;\n            wasm.universe_render(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_export_0.value += 16;\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * @returns {number}\n    */\n    width() {\n        var ret = wasm.universe_width(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    height() {\n        var ret = wasm.universe_height(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    cells() {\n        var ret = wasm.universe_cells(this.ptr);\n        return ret;\n    }\n}\n\n__exports.__wbindgen_string_new = function(arg0, arg1) {\n    var ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n};\n\n__exports.__wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\n__exports.__wbg_log_3bafd82835c6de6d = function(arg0) {\n    console.log(getObject(arg0));\n};\n\n__exports.__wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n\n__exports. Universe =  Universe;\n      function init(wasm_path) {\n          const fetchPromise = fetch(wasm_path);\n          let resultPromise;\n          if (typeof WebAssembly.instantiateStreaming === 'function') {\n              resultPromise = WebAssembly.instantiateStreaming(fetchPromise, { './gol_lib_bg.js': __exports });\n          } else {\n              resultPromise = fetchPromise\n              .then(response => response.arrayBuffer())\n              .then(buffer => WebAssembly.instantiate(buffer, { './gol_lib_bg.js': __exports }));\n          }\n          return resultPromise.then(({instance}) => {\n              wasm = init.wasm = instance.exports;\n              __exports.wasm = wasm;\n              return;\n          });\n      };\n      function init_node(wasm_path) {\n          const fs = require('fs');\n          return new Promise(function(resolve, reject) {\n              fs.readFile(__dirname + wasm_path, function(err, data) {\n                  if (err) {\n                      reject(err);\n                  } else {\n                      resolve(data.buffer);\n                  }\n              });\n          })\n          .then(data => WebAssembly.instantiate(data, { './gol_lib_bg': __exports }))\n          .then(({instance}) => {\n              wasm = init.wasm = instance.exports;\n              __exports.wasm = wasm;\n              return;\n          });\n      }\n      const wasm_bindgen = Object.assign(false ? init_node : init, __exports);\n      module.exports = function loadWASMBundle(bundle) {\n            return wasm_bindgen(bundle).then(() => __exports)\n      }\n    "]}